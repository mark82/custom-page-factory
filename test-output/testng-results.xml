<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="8094" started-at="2012-10-18T20:14:47Z" finished-at="2012-10-18T20:14:55Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="8094" started-at="2012-10-18T20:14:47Z" finished-at="2012-10-18T20:14:55Z">
      <class name="com.example.JQueryHomePageTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="6" started-at="2012-10-18T16:14:47Z" finished-at="2012-10-18T16:14:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2893" started-at="2012-10-18T16:14:47Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2012-10-18T16:14:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="setup" is-config="true" duration-ms="3008" started-at="2012-10-18T16:14:50Z" finished-at="2012-10-18T16:14:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.JQueryHomePageTest.ensureItemsAreSame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="ensureItemsAreSame()[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="ensureItemsAreSame" duration-ms="16" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureItemsAreSame -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.JQueryHomePageTest.ensureItemsAreSame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.JQueryHomePageTest.ensureMissingWebElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="ensureMissingWebElement()[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="ensureMissingWebElement" duration-ms="1" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureMissingWebElement -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.JQueryHomePageTest.ensureMissingWebElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.JQueryHomePageTest.ensureNoSuchElementExceptionThrown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="ensureNoSuchElementExceptionThrown()[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="ensureNoSuchElementExceptionThrown" duration-ms="0" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[The element could not be found (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 13 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.25.0', revision: '17482', time: '2012-07-18 22:18:01'
System info: os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_01'
Driver info: driver.version: RemoteWebDriver
Session ID: 87bf2563f78608d66a7b5b945138e394]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: The element could not be found (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 13 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.25.0', revision: '17482', time: '2012-07-18 22:18:01'
System info: os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_01'
Driver info: driver.version: RemoteWebDriver
Session ID: 87bf2563f78608d66a7b5b945138e394
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:188)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:145)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:498)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:268)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:297)
	at org.openqa.selenium.By$ById.findElement(By.java:215)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:260)
	at com.example.CustomElementLocator.findElement(CustomElementLocator.java:50)
	at com.example.CustomLocatingElementHandler.invoke(CustomLocatingElementHandler.java:27)
	at $Proxy18.isDisplayed(Unknown Source)
	at com.example.CustomFieldDecorator.decorate(CustomFieldDecorator.java:42)
	at com.example.CustomPageFactory.proxyFields(CustomPageFactory.java:64)
	at com.example.CustomPageFactory.initElements(CustomPageFactory.java:34)
	at com.example.CustomPageFactory.initElements(CustomPageFactory.java:27)
	at com.example.CustomPageFactory.initElements(CustomPageFactory.java:19)
	at com.example.JQueryHomePage.<init>(JQueryHomePage.java:37)
	at com.example.JQueryHomePageTest.setup(JQueryHomePageTest.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1197)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1122)
	at org.testng.TestNG.run(TestNG.java:1030)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureNoSuchElementExceptionThrown -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.JQueryHomePageTest.ensureNoSuchElementExceptionThrown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="getText()[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="getText" duration-ms="73" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getText -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.JQueryHomePageTest.getText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="shutdown()[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="shutdown" is-config="true" duration-ms="2072" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutdown -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2012-10-18T16:14:53Z" finished-at="2012-10-18T16:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.JQueryHomePageTest.getText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.example.JQueryHomePageTest@29d971d9]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2012-10-18T16:14:55Z" finished-at="2012-10-18T16:14:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.example.JQueryHomePageTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
